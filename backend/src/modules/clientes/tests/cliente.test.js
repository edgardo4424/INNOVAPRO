const Cliente = require("../domain/entities/cliente"); // Importamos la entidad Cliente

describe("üß™ Entidad Cliente", () => {

    describe("üìå validarCamposObligatorios()", () => {
      it("‚úÖ debe validar correctamente los campos obligatorios en modo crear", () => {
        const error = Cliente.validarCamposObligatorios({
          razon_social: "INNOVA SAC",
          tipo: "Persona Jur√≠dica",
          creado_por: 1
        }, "crear");
  
        expect(error).toBeNull();
      });
  
      it("‚ùå debe fallar si falta raz√≥n social o tipo en modo crear", () => {
        const error = Cliente.validarCamposObligatorios({
          creado_por: 1
        }, "crear");
  
        expect(error).toBe("Raz√≥n social y tipo de entidad son obligatorios.");
      });
  
      it("‚ùå debe fallar si no se proporciona ning√∫n campo v√°lido en modo editar", () => {
        const error = Cliente.validarCamposObligatorios({}, "editar");
        expect(error).toBe("Debe proporcionar al menos un campo v√°lido para actualizar.");
      });
  
      it("‚úÖ debe pasar si se proporciona al menos un campo v√°lido en modo editar", () => {
        const error = Cliente.validarCamposObligatorios({ telefono: "999999999" }, "editar");
        expect(error).toBeNull();
      });
    });
  
    describe("üìå validarTipoEntidad()", () => {
      it("‚úÖ debe validar correctamente Persona Jur√≠dica", () => {
        const error = Cliente.validarTipoEntidad({
          tipo: "Persona Jur√≠dica",
          ruc: "20123456789",
          domicilio_fiscal: "Av. Siempre Viva 123",
          representante_legal: "Juan P√©rez",
          dni_representante: "12345678"
        });
        expect(error).toBeNull();
      });
  
      it("‚ùå debe fallar si faltan datos en Persona Jur√≠dica", () => {
        const error = Cliente.validarTipoEntidad({
          tipo: "Persona Jur√≠dica",
          ruc: "",
          domicilio_fiscal: "",
          representante_legal: "",
          dni_representante: ""
        });
        expect(error).toBe("Los datos de la Persona Jur√≠dica son obligatorios.");
      });
  
      it("‚úÖ debe validar correctamente Persona Natural", () => {
        const error = Cliente.validarTipoEntidad({
          tipo: "Persona Natural",
          dni: "12345678"
        });
        expect(error).toBeNull();
      });
  
      it("‚ùå debe fallar si falta DNI en Persona Natural", () => {
        const error = Cliente.validarTipoEntidad({
          tipo: "Persona Natural"
        });
        expect(error).toBe("El DNI es obligatorio para Personas Naturales.");
      });
  
      it("‚ùå debe fallar si el tipo es inv√°lido", () => {
        const error = Cliente.validarTipoEntidad({ tipo: "Entidad Fantasma" });
        expect(error).toBe("Tipo de entidad inv√°lido. Debe ser 'Persona Jur√≠dica' o 'Persona Natural'.");
      });
    });
  
    describe("üìå construirDatosCliente()", () => {
      it("‚úÖ debe construir correctamente los datos para Persona Jur√≠dica", () => {
        const datos = Cliente.construirDatosCliente({
          tipo: "Persona Jur√≠dica",
          razon_social: "INNOVA",
          telefono: "999999999",
          email: "",
          creado_por: 1,
          ruc: "20123456789",
          domicilio_fiscal: "Av. Per√∫",
          representante_legal: "Lucas",
          dni_representante: "12345678"
        });
  
        expect(datos).toMatchObject({
          tipo: "Persona Jur√≠dica",
          ruc: "20123456789",
          domicilio_fiscal: "Av. Per√∫",
          representante_legal: "Lucas",
          creado_por: 1,
        });
  
        expect(datos).not.toHaveProperty("email");
      });
  
      it("‚úÖ debe construir correctamente los datos para Persona Natural", () => {
        const datos = Cliente.construirDatosCliente({
          tipo: "Persona Natural",
          razon_social: "Pedro",
          telefono: "123",
          email: "pedro@mail.com",
          creado_por: 1,
          dni: "12345678"
        });
  
        expect(datos).toMatchObject({
          tipo: "Persona Natural",
          dni: "12345678",
          ruc: null,
          domicilio_fiscal: null,
          representante_legal: null,
          dni_representante: null,
        });
      });
    });
  
    describe("üìå Constructor Cliente", () => {
      it("‚úÖ debe crear una instancia de Cliente con todos los datos", () => {
        const cliente = new Cliente(
          "INNOVA SAC", "Persona Jur√≠dica", "20123456789", "12345678",
          "999999999", "contacto@innova.com", "Av. Siempre Viva",
          "Lucas", "11112222", 1
        );
  
        expect(cliente.razon_social).toBe("INNOVA SAC");
        expect(cliente.ruc).toBe("20123456789");
        expect(cliente.creado_por).toBe(1);
      });
    });
  
  });